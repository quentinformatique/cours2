/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src.tp2.client;

import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import javax.swing.JOptionPane;

/**
 * @author lbath
 */
public class Client extends javax.swing.JFrame {

    /**
     * Socket de communication avec le serveur
     */
    private Socket socket;
    /**
     * Flux de lecture relié au canal d'entrée du socket
     */
    private BufferedReader in;
    /**
     * Flux de sortie relié au canal de sortie du socket
     */
    private PrintWriter out;

    /**
     * Creates new form Client
     */
    public Client() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIPServeur = new javax.swing.JTextField();
        txtPort = new javax.swing.JTextField();
        btnConnecter = new javax.swing.JButton();
        txtAmount = new javax.swing.JTextField();
        btnSolde = new javax.swing.JButton();
        btnDebiter = new javax.swing.JButton();
        btnCrediter = new javax.swing.JButton();
        lblMontant = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("IP serveur");
        jLabel2.setText("Port");
        btnConnecter.setText("Connecter");
        btnSolde.setText("Solde");
        btnDebiter.setText("Débiter");
        btnCrediter.setText("Créditer");
        lblMontant.setText("Montant");

        btnConnecter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnecterAction(evt);
            }
        });

        btnSolde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSoldeAction(evt);
            }
        });

        btnDebiter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDebiterAction(evt);
            }
        });

        btnCrediter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrediterAction(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtIPServeur, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnConnecter))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblMontant)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnSolde)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnDebiter)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnCrediter)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(txtIPServeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnConnecter))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblMontant)
                                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnSolde)
                                        .addComponent(btnDebiter)
                                        .addComponent(btnCrediter))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }

    private void btnCrediterAction(ActionEvent evt) {
    }

    private void btnDebiterAction(ActionEvent evt) {
        try {
            out.println("DEBIT " + txtAmount.getText());
            String recu = in.readLine();
            JOptionPane.showMessageDialog(this, recu);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Erreur : " + e);
        }
    }

    private void btnSoldeAction(ActionEvent evt) {
        try {
            // Envoi message au serveur
            out.println("SOLDE");
            // Lecture et affichage réponse serveur
            String recu =in.readLine();

        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this,"Erreur"+e);
        }
    }

    /**
     * Crée un socket de communication avec le serveur en utilisant l'adresse IP et le port
     * saisis dans txtIPserveur et txtPort. Si la demande est acceptée, mémorise dans les attributs
     * in et out les flux d'entrée et sortie du socket, bloque la partie connexion de l'ihm
     * et débloque la partie communication de l'ihm.
     * Affiche un message si l'adresse IP ou le port siaisis sont incorrects ou la demande échoue.
     */
    private void btnConnecterAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnecterAction
        if (txtIPServeur.getText().isEmpty() || txtPort.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "IP ou port serveur non saisi(s) !");
        else
            try {
                InetAddress ipServeur
                        = InetAddress.getByName(txtIPServeur.getText());
                int portServeur = Integer.parseInt(txtPort.getText());
                // Demande connexion et récupération des cannaux d'entrée
                // et sortie du socket
                socket = new Socket(ipServeur, portServeur);
                in = new BufferedReader(
                        new InputStreamReader(socket.getInputStream()));
                out = new PrintWriter(
                        new OutputStreamWriter(socket.getOutputStream()), true);
                // Désactiver la partie "connexion" de l'ihm
                // et activer la partie "communication" de l'ihm
                txtIPServeur.setEnabled(false);
                txtPort.setEnabled(false);
                btnConnecter.setEnabled(false);
            } catch (UnknownHostException e) {
                JOptionPane.showMessageDialog(this, "IP serveur incorrecte !");
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Port serveur incorrect !");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Erreur : " + e);
            }
    }//GEN-LAST:event_btnConnecterAction


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnecter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtIPServeur;
    private javax.swing.JTextField txtPort;
    private javax.swing.JLabel lblMontant;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JButton btnSolde;
    private javax.swing.JButton btnDebiter;
    private javax.swing.JButton btnCrediter;
    // End of variables declaration//GEN-END:variables
}
